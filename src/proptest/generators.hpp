#pragma once

#include "proptest/generator/integral.hpp"
#include "proptest/generator/floating.hpp"
#include "proptest/generator/bool.hpp"
#include "proptest/generator/string.hpp"
#include "proptest/generator/unicode.hpp"
#include "proptest/generator/utf8string.hpp"
#include "proptest/generator/utf16string.hpp"
#include "proptest/generator/cesu8string.hpp"
#include "proptest/generator/vector.hpp"
#include "proptest/generator/list.hpp"
#include "proptest/generator/pair.hpp"
#include "proptest/generator/tuple.hpp"
#include "proptest/generator/set.hpp"
#include "proptest/generator/map.hpp"
#include "proptest/generator/util.hpp"
#include "proptest/generator/shared_ptr.hpp"
#include "proptest/generator/nullable.hpp"
#include "proptest/combinator/filter.hpp"
#include "proptest/combinator/transform.hpp"
#include "proptest/combinator/construct.hpp"
#include "proptest/combinator/elementof.hpp"
#include "proptest/combinator/oneof.hpp"
#include "proptest/combinator/intervals.hpp"
#include "proptest/combinator/dependency.hpp"
#include "proptest/combinator/chain.hpp"
#include "proptest/combinator/derive.hpp"
#include "proptest/combinator/aggregate.hpp"
#include "proptest/combinator/accumulate.hpp"
#include "proptest/combinator/just.hpp"
#include "proptest/combinator/lazy.hpp"
#include "proptest/combinator/reference.hpp"
